// Code generated by go-swagger; DO NOT EDIT.

package stacks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/getlunaform/lunaform/models"
)

// UndeployStackNoContentCode is the HTTP code returned for type UndeployStackNoContent
const UndeployStackNoContentCode int = 204

/*UndeployStackNoContent No Content

swagger:response undeployStackNoContent
*/
type UndeployStackNoContent struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewUndeployStackNoContent creates UndeployStackNoContent with default headers values
func NewUndeployStackNoContent() *UndeployStackNoContent {

	return &UndeployStackNoContent{}
}

// WithPayload adds the payload to the undeploy stack no content response
func (o *UndeployStackNoContent) WithPayload(payload interface{}) *UndeployStackNoContent {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the undeploy stack no content response
func (o *UndeployStackNoContent) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UndeployStackNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(204)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// UndeployStackUnprocessableEntityCode is the HTTP code returned for type UndeployStackUnprocessableEntity
const UndeployStackUnprocessableEntityCode int = 422

/*UndeployStackUnprocessableEntity Unprocessable Entity

swagger:response undeployStackUnprocessableEntity
*/
type UndeployStackUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.ServerError `json:"body,omitempty"`
}

// NewUndeployStackUnprocessableEntity creates UndeployStackUnprocessableEntity with default headers values
func NewUndeployStackUnprocessableEntity() *UndeployStackUnprocessableEntity {

	return &UndeployStackUnprocessableEntity{}
}

// WithPayload adds the payload to the undeploy stack unprocessable entity response
func (o *UndeployStackUnprocessableEntity) WithPayload(payload *models.ServerError) *UndeployStackUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the undeploy stack unprocessable entity response
func (o *UndeployStackUnprocessableEntity) SetPayload(payload *models.ServerError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UndeployStackUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UndeployStackInternalServerErrorCode is the HTTP code returned for type UndeployStackInternalServerError
const UndeployStackInternalServerErrorCode int = 500

/*UndeployStackInternalServerError Internal Server Error

swagger:response undeployStackInternalServerError
*/
type UndeployStackInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ServerError `json:"body,omitempty"`
}

// NewUndeployStackInternalServerError creates UndeployStackInternalServerError with default headers values
func NewUndeployStackInternalServerError() *UndeployStackInternalServerError {

	return &UndeployStackInternalServerError{}
}

// WithPayload adds the payload to the undeploy stack internal server error response
func (o *UndeployStackInternalServerError) WithPayload(payload *models.ServerError) *UndeployStackInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the undeploy stack internal server error response
func (o *UndeployStackInternalServerError) SetPayload(payload *models.ServerError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UndeployStackInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
