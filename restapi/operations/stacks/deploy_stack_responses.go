// Code generated by go-swagger; DO NOT EDIT.

package stacks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/getlunaform/lunaform/models"
)

// DeployStackAcceptedCode is the HTTP code returned for type DeployStackAccepted
const DeployStackAcceptedCode int = 202

/*DeployStackAccepted Accepted

swagger:response deployStackAccepted
*/
type DeployStackAccepted struct {

	/*
	  In: Body
	*/
	Payload *models.ResourceTfStack `json:"body,omitempty"`
}

// NewDeployStackAccepted creates DeployStackAccepted with default headers values
func NewDeployStackAccepted() *DeployStackAccepted {

	return &DeployStackAccepted{}
}

// WithPayload adds the payload to the deploy stack accepted response
func (o *DeployStackAccepted) WithPayload(payload *models.ResourceTfStack) *DeployStackAccepted {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the deploy stack accepted response
func (o *DeployStackAccepted) SetPayload(payload *models.ResourceTfStack) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeployStackAccepted) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(202)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeployStackBadRequestCode is the HTTP code returned for type DeployStackBadRequest
const DeployStackBadRequestCode int = 400

/*DeployStackBadRequest Bad Request

swagger:response deployStackBadRequest
*/
type DeployStackBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ServerError `json:"body,omitempty"`
}

// NewDeployStackBadRequest creates DeployStackBadRequest with default headers values
func NewDeployStackBadRequest() *DeployStackBadRequest {

	return &DeployStackBadRequest{}
}

// WithPayload adds the payload to the deploy stack bad request response
func (o *DeployStackBadRequest) WithPayload(payload *models.ServerError) *DeployStackBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the deploy stack bad request response
func (o *DeployStackBadRequest) SetPayload(payload *models.ServerError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeployStackBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
