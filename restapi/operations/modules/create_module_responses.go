// Code generated by go-swagger; DO NOT EDIT.

package modules

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/getlunaform/lunaform/models"
)

// CreateModuleCreatedCode is the HTTP code returned for type CreateModuleCreated
const CreateModuleCreatedCode int = 201

/*CreateModuleCreated OK

swagger:response createModuleCreated
*/
type CreateModuleCreated struct {

	/*
	  In: Body
	*/
	Payload *models.ResourceTfModule `json:"body,omitempty"`
}

// NewCreateModuleCreated creates CreateModuleCreated with default headers values
func NewCreateModuleCreated() *CreateModuleCreated {

	return &CreateModuleCreated{}
}

// WithPayload adds the payload to the create module created response
func (o *CreateModuleCreated) WithPayload(payload *models.ResourceTfModule) *CreateModuleCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create module created response
func (o *CreateModuleCreated) SetPayload(payload *models.ResourceTfModule) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateModuleCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateModuleBadRequestCode is the HTTP code returned for type CreateModuleBadRequest
const CreateModuleBadRequestCode int = 400

/*CreateModuleBadRequest Bad Request

swagger:response createModuleBadRequest
*/
type CreateModuleBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ServerError `json:"body,omitempty"`
}

// NewCreateModuleBadRequest creates CreateModuleBadRequest with default headers values
func NewCreateModuleBadRequest() *CreateModuleBadRequest {

	return &CreateModuleBadRequest{}
}

// WithPayload adds the payload to the create module bad request response
func (o *CreateModuleBadRequest) WithPayload(payload *models.ServerError) *CreateModuleBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create module bad request response
func (o *CreateModuleBadRequest) SetPayload(payload *models.ServerError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateModuleBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
