swagger: "2.0"
info:
  title: lunaform
  description: |
   This is a RESTful server for managing Terraform plan and apply jobs and the auditing of actions to approve those apply jobs.
   The inspiration for this project is the AWS CloudFormation API's. The intention is to implement a locking mechanism
   not only for the terraform state, but for the plan and apply of terraform modules. Once a `module` plan starts, it
   is instantiated as a `stack` within the nomencalture of `lunaform`.
  version: 0.0.1-alpha
  contact:
    email: "drew.sonne@gmail.com"
  license:
    name: Apache 2.0
    url: https://github.com/getlunaform/lunaform/blob/master/LICENSE
basePath: /api
schemes:
  - http
  - https
consumes:
- application/vnd.lunaform.v1+json
produces:
- application/vnd.lunaform.v1+json

securityDefinitions:
  api-key:
    type: apiKey
    in: header
    name: x-lunaform-auth

x-tagGroups:
  - name: Resources
    tags:
      - resources
  - name: Terraform
    tags:
      - modules
      - stacks
      - workspaces
      - state-backends

paths:
  /:
    get:
      tags:
        - resources
      description: List the root resource groups
      operationId: list-resource-groups
      produces: ["application/vnd.lunaform.v1+json"]
      responses:
        200:
          description: OK
          examples:
            application/vnd.lunaform.v1+json:
              _links:
                $ref: "#/definitions/hal-rsc-links"
              _embedded:
                resources:
                  - name: tf
                    _links: {self: {href: "http://example.com/api/tf/"}}
                  - name: identity
                    _links: {self: {href: "http://example.com/api/identity"}}
                  - name: vcs
                    _links: {self: {href: "http://example.com/api/vcs"}}
          schema:
            $ref: "#/definitions/response-list-resources"
  /{group}:
    get:
      tags:
        - resources
      operationId: list-resources
      produces: ["application/vnd.lunaform.v1+json"]
      parameters:
        - in: path
          name: group
          type: string
          required: true
          description: Root level resources
          enum:
            - tf
            - identity
            - vcs
      responses:
        200:
          description: OK
          examples:
            application/vnd.lunaform.v1+json:
              _embedded:
                resources:
                  - name: groups
                    _links: {self: {href: "http://example.com/api/identity/groups"}}
                  - name: providers
                    _links: {self: {href: "http://example.com/api/identity/providers"}}
                  - name: users
                    _links: {self: {href: "http://example.com/api/identity/users"}}
          schema:
            $ref: "#/definitions/response-list-resources"
        404:
          $ref: "#/responses/404"
  /tf/modules:
    get:
      tags:
        - modules
      description: List TF modules
      operationId: list-modules
      produces: ["application/vnd.lunaform.v1+json"]
      security:
        - api-key: []
      responses:
        200:
          description: OK
          examples:
            application/vnd.lunaform.v1+json:
              _links:
                $ref: "#/definitions/hal-rsc-links"
              _embedded:
                resources:
                  - name: template
                    _links: {self: {href: "http://example.com/api/tf/template"}}
                  - name: stack
                    _links: {self: {href: "http://example.com/api/tf/stack"}}
          schema:
            $ref: "#/definitions/response-list-tf-modules"
        404:
          $ref: "#/responses/404"
        500:
          $ref: "#/responses/500"
    post:
      tags:
        - modules
      description: Upload a Terraform module
      operationId: create-module
      produces: ["application/vnd.lunaform.v1+json"]
      consumes: ["application/vnd.lunaform.v1+json"]
      security:
        - api-key: []
      parameters:
        - in: body
          name: terraform-module
          description: A terraform module
          schema:
            $ref: "#/definitions/resource-tf-module"
      responses:
        201:
          description: OK
          examples:
            application/vnd.lunaform.v1+json:
              _links:
                $ref: "#/definitions/hal-rsc-links"
              name: my-tf-module
          schema:
            $ref: "#/definitions/resource-tf-module"
        400:
          $ref: "#/responses/400"
  /tf/workspaces:
    get:
      tags:
        - workspaces
      description: List approved terraform workspaces
      operationId: list-workspaces
      produces: ["application/vnd.lunaform.v1+json"]
      security:
        - api-key: []
      responses:
        200:
          description: OK
          examples:
            application/vnd.lunaform.v1+json:
              _links:
                $ref: "#/definitions/hal-rsc-links"
              _embedded:
                workspaces:
                  - name: test
                    _links: {self: {href: "http://example.com/api/tf/template"}}
                  - name: stage
                    _links: {self: {href: "http://example.com/api/tf/stack"}}
                  - name: live
                    _links: {self: {href: "http://example.com/api/tf/stack"}}
          schema:
            $ref: "#/definitions/response-list-tf-workspaces"
        404:
          description: Not Found
        500:
          description: Internal Server Error
          schema:
            $ref: "#/definitions/server-error"
  /tf/stacks:
    get:
      tags:
        - stacks
      description: List deployed TF modules
      operationId: list-stacks
      produces: ["application/vnd.lunaform.v1+json"]
      security:
        - api-key: []
      responses:
        200:
          description: OK
          examples:
            application/vnd.lunaform.v1+json:
              _links:
                $ref: "#/definitions/hal-rsc-links"
              _embedded:
                resources:
                  - name: template
                    _links: {self: {href: "http://example.com/api/tf/template"}}
                  - name: stack
                    _links: {self: {href: "http://example.com/api/tf/stack"}}
          schema:
            $ref: "#/definitions/response-list-tf-stacks"
        404:
          $ref: "#/responses/404"
        500:
          $ref: "#/responses/500"
    post:
      tags:
        - stacks
      description: Deploy a stack from a module
      operationId: deploy-stack
      produces: ["application/vnd.lunaform.v1+json"]
      consumes: ["application/vnd.lunaform.v1+json"]
      security:
        - api-key: []
      parameters:
        - in: body
          name: terraform-stack
          description: A deployed terraform module
          schema:
            $ref: "#/definitions/resource-tf-stack"
      responses:
        202:
          description: Accepted
          examples:
            application/vnd.lunaform.v1+json:
              _links:
                $ref: "#/definitions/hal-rsc-links"
              name: my-tf-stack
          schema:
            $ref: "#/definitions/resource-tf-stack"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/server-error"
  /tf/state-backends:
    get:
      tags:
        - state-backends
      description: List TF State Backends
      operationId: list-state-backends
      produces: ["application/vnd.lunaform.v1+json"]
      security:
        - api-key: []
      responses:
        200:
          description: OK
          examples:
            application/vnd.lunaform.v1+json:
              _links:
                $ref: "#/definitions/hal-rsc-links"
              _embedded:
                resources:
                  - name: template
                    _links: {self: {href: "http://example.com/api/tf/template"}}
                  - name: stack
                    _links: {self: {href: "http://example.com/api/tf/stack"}}
          schema:
            $ref: "#/definitions/response-list-tf-state-backends"
        404:
          $ref: "#/responses/404"
        500:
          $ref: "#/responses/500"
    post:
      tags:
        - state-backends
      description: Define a Terraform state backend
      operationId: create-state-backend
      produces: ["application/vnd.lunaform.v1+json"]
      consumes: ["application/vnd.lunaform.v1+json"]
      security:
        - api-key: []
      parameters:
        - in: body
          name: terraform-state-backend
          description: A terraform state backend
          schema:
            $ref: "#/definitions/resource-tf-state-backend"
      responses:
        201:
          description: OK
          examples:
            application/vnd.lunaform.v1+json:
              _links:
                $ref: "#/definitions/hal-rsc-links"
              name: my-tf-state-backend
          schema:
            $ref: "#/definitions/resource-tf-state-backend"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/server-error"
  /tf/state-backend/{id}:
    put:
      tags:
        - state-backends
      description: Define a Terraform state backend
      operationId: update-state-backend
      produces: ["application/vnd.lunaform.v1+json"]
      consumes: ["application/vnd.lunaform.v1+json"]
      security:
        - api-key: []
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: ID of a terraform state backend
        - in: body
          name: terraform-state-backend
          description: A terraform state backend
          schema:
            $ref: "#/definitions/resource-tf-state-backend"
      responses:
        200:
          description: OK
          examples:
            application/vnd.lunaform.v1+json:
              _links:
                $ref: "#/definitions/hal-rsc-links"
              name: my-tf-state-backend
          schema:
            $ref: "#/definitions/resource-tf-state-backend"
        404:
          $ref: "#/responses/404"
        500:
          $ref: "#/responses/500"
  /tf/workspace/{name}:
    put:
      tags:
        - workspaces
      description: Create a Terraform workspace
      operationId: create-workspace,
      produces: ["application/vnd.lunaform.v1+json"]
      consumes: ["application/vnd.lunaform.v1+json"]
      security:
        - api-key: []
      parameters:
        - in: path
          name: name
          required: true
          type: string
          description: A terraform workspace
        - in: body
          name: terraform-workspace
          description: A terraform workspace
          schema:
            $ref: "#/definitions/resource-tf-workspace"
      responses:
        200:
          description: OK
          examples:
            application/vnd.lunaform.v1+json:
              _links:
                $ref: "#/definitions/hal-rsc-links"
              name: my-tf-module
          schema:
            $ref: "#/definitions/resource-tf-workspace"
        201:
          description: Created
          examples:
            application/vnd.lunaform.v1+json:
              _links:
                $ref: "#/definitions/hal-rsc-links"
              name: my-tf-module
          schema:
            $ref: "#/definitions/resource-tf-workspace"
        400:
          $ref: "#/responses/400"
        404:
          $ref: "#/responses/404"
        500:
          $ref: "#/responses/500"
    get:
      tags:
        - workspaces
      description: Describe a terraform workspace
      operationId: describe-workspace
      security:
        - api-key: []
      parameters:
        - in: path
          name: name
          required: true
          type: string
          description: A terraform workspace
      responses:
        200:
          description: OK
          examples:
            application/vnd.lunaform.v1+json:
              _links:
                $ref: "#/definitions/hal-rsc-links"
              name: my-tf-module
          schema:
            $ref: "#/definitions/resource-tf-workspace"
        404:
          $ref: "#/responses/404"
        500:
          $ref: "#/responses/500"
  /tf/module/{id}:
    delete:
      tags:
        - modules
      description: Delete a terraform module
      operationId: delete-module
      security:
        - api-key: []
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: Unique identifier for this module
      responses:
        204:
          description: No Content
        422:
          description: Unprocessable Entity
          schema:
            $ref: "#/definitions/server-error"
        404:
          $ref: "#/responses/404"
        500:
          $ref: "#/responses/500"
    get:
      tags:
        - modules
      description: Get a Terraform module
      operationId: get-module
      security:
        - api-key: []
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: Unique identifier for this module
      responses:
        200:
          description: OK
          examples:
            application/vnd.lunaform.v1+json:
              _links:
                $ref: "#/definitions/hal-rsc-links"
              name: my-tf-module
          schema:
            $ref: "#/definitions/resource-tf-module"
        404:
          $ref: "#/responses/404"
        500:
          $ref: "#/responses/500"
  /tf/stack/{id}:
    delete:
      tags:
        - stacks
      description: Undeploy a teraform module
      operationId: undeploy-stack
      security:
        - api-key: []
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: Unique identifier for this stack
      responses:
      responses:
        204:
          description: No Content
        422:
          description: Unprocessable Entity
          schema:
            $ref: "#/definitions/server-error"
        404:
          $ref: "#/responses/404"
        500:
          $ref: "#/responses/500"
    get:
      tags:
        - stacks
      description: Get a stack
      operationId: get-stack
      security:
        - api-key: []
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: Unique identifier for this stack
      responses:
        200:
          description: OK
          examples:
            application/vnd.lunaform.v1+json:
              _links:
                $ref: "#/definitions/hal-rsc-links"
              name: my-tf-module
          schema:
            $ref: "#/definitions/resource-tf-stack"
        404:
          $ref: "#/responses/404"
        500:
          $ref: "#/responses/500"
  /tf/stack/{id}/deployments:
    get:
      tags:
        - stacks
      description: List the deployments for this stack
      operationId: list-deployments
      security:
        - api-key: []
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: Unique identifier for this stack
      responses:
        200:
          description: OK
          examples:
            application/vnd.lunaform.v2+json:
              _links:
                $ref: "#/definitions/hal-rsc-links"
              _embedded:
                deployments:
          schema:
            $ref: "#/definitions/response-list-tf-deployments"
responses:
  400:
    description: Bad Request
    schema:
      $ref: "#/definitions/server-error"
  404:
    description: Not Found
    schema:
      $ref: "#/definitions/server-error"
  500:
    description: Internal Server Error
    schema:
      $ref: "#/definitions/server-error"

definitions:
#  module:
#    type: string
#    description: The same definition as used within the [terraform ecosystem](<a href="https://www.terraform.io/docs/modules/index.html">https://www.terraform.io/docs/modules/index.html</a>).
#  stack:
#    type: string
#    description: A _stack_ is a _module_ bound to a specific set of parameters. Taking the analogy of classes and objects, if
#  identity_provider:
#    type: object
#    description: |
#      A source of users either locally managed, or through a federation.
#      Two types of Identity Providers (IdP) are offered. The first are locally managed IdP's which `lunaform`
#      handles all management of. The second are read-only federated IdP's.
  response-list-tf-deployments:
    type: object
    required:
      - _links
      - _embedded
    description: List of deployments for this stack
    properties:
      _links:
        $ref: "#/definitions/hal-rsc-links"
      _embedded:
        $ref: "#/definitions/resource-list-tf-deployment"
  resource-list-tf-deployment:
    type: object
    required:
      - stack
      - deployments
    properties:
      deployments:
        type: array
        items:
          $ref: "#/definitions/resource-tf-deployment"
      stack:
        $ref: "#/definitions/resource-tf-stack"
  response-list-tf-state-backends:
    type: object
    required:
      - _links
      - _embedded
    description: List of tf state backends
    properties:
      _links:
        $ref: "#/definitions/hal-rsc-links"
      _embedded:
        $ref: "#/definitions/resource-list-tf-state-backend"
  resource-list-tf-state-backend:
    type: object
    readOnly: true
    required:
      - state-backends
    properties:
      state-backends:
        type: array
        items:
          $ref: "#/definitions/resource-tf-state-backend"
  response-list-tf-modules:
    type: object
    required:
      - _links
      - _embedded
    description: List of tf modules
    properties:
      _links:
        $ref: "#/definitions/hal-rsc-links"
      _embedded:
        $ref: "#/definitions/resource-list-tf-module"
  resource-list-tf-module:
    type: object
    readOnly: true
    required:
      - modules
    properties:
      modules:
        type: array
        items:
          $ref: "#/definitions/resource-tf-module"
  resource-tf-module:
    type: object
    required:
      - name
      - type
      - source
    description: A TF module
    properties:
      _links:
        $ref: "#/definitions/hal-rsc-links"
      _embedded:
        $ref: "#/definitions/resource-list-tf-stack"
      id:
        type: string
      name:
        type: string
      source:
        type: string
      type:
        type: string
        enum:
          - git
          - registry
          - enterprise
  response-list-tf-workspaces:
    type: object
    required:
      - _links
      - _embedded
    description: List of terraform workspaces
    properties:
      _links:
        $ref: "#/definitions/hal-rsc-links"
      _embedded:
        $ref: "#/definitions/resource-list-tf-workspace"
  resource-list-tf-workspace:
    type: object
    required:
      - workspaces
    properties:
      workspaces:
        type: array
        items:
          $ref: "#/definitions/resource-tf-workspace"
  response-list-tf-stacks:
    type: object
    required:
      - _links
      - _embedded
    description: List of tf modules
    properties:
      _links:
        $ref: "#/definitions/hal-rsc-links"
      _embedded:
        $ref: "#/definitions/resource-list-tf-stack"
  resource-list-tf-stack:
    type: object
    readOnly: true
    required:
      - stacks
    properties:
      stacks:
        type: array
        items:
          $ref: "#/definitions/resource-tf-stack"
  resource-tf-workspace:
    type: object
    required:
     - name
    description: A terraform workspace
    properties:
      _links:
        $ref: "#/definitions/hal-rsc-links"
      name:
        type: string
      modules:
        type: array
        x-omitempty: true
        items:
          $ref: "#/definitions/resource-tf-module"
  resource-tf-stack:
    type: object
    required:
      - name
      - module-id
    description: A TF stack
    properties:
      _links:
        $ref: "#/definitions/hal-rsc-links"
      _embedded:
        properties:
          deployments:
            type: array
            items:
              $ref: "#/definitions/resource-tf-deployment"
          workspace:
            $ref: "#/definitions/resource-tf-workspace"
      id:
        type: string
      name:
        type: string
      module-id:
        type: string
      status:
        type: string
        enum:
          - DEPLOYING
          - SUCCESS
          - FAIL
      workspace:
        type: string
      variables:
        type: object
        additionalProperties:
          type: string
  resource-tf-deployment:
    type: object
    properties:
      _links:
        $ref: "#/definitions/hal-rsc-links"
      id:
        type: string
      status:
        type: string
        x-nullable: true
        enum:
          - DEPLOYING
          - SUCCESS
          - FAIL
      workspace:
        type: string
        x-nullable: true
  resource-auth-user:
    type: object
    properties:
      shortname:
        type: string
      name:
        type: string
      id:
        type: string
      groups:
        type: array
        items:
          type: string
      api-keys:
        type: array
        items:
          type: string
  response-list-resources:
    type: object
    required:
      - _embedded
    description: List of resources
    properties:
      _links:
        $ref: "#/definitions/hal-rsc-links"
      _embedded:
        $ref: "#/definitions/resource-list"
  resource-list:
    type: object
    readOnly: true
    required:
      - resources
    properties:
      resources:
        type: array
        items:
          $ref: "#/definitions/resource"
  resource:
    type: object
    description: A resources
    required:
      - name
    properties:
      _links:
        $ref: "#/definitions/hal-rsc-links"
      name:
        type: string
  hal-rsc-links:
    type: object
    description: Links to this resources and documentation for this resource
    properties:
      curies:
        type: array
        x-omitempty: true
        items:
          $ref: "#/definitions/hal-curie"
    additionalProperties:
      $ref: "#/definitions/hal-href"
    x-go-type:
      import:
        package: "github.com/getlunaform/lunaform/models/hal"
      type: HalRscLinks
  hal-href:
    type: object
    x-isnullable: true
    properties:
      href:
        type: string
    x-go-type:
      import:
        package: "github.com/getlunaform/lunaform/models/hal"
      type: HalHref
  hal-curie:
    type: object
    properties:
      name:
        type: string
      href:
        type: string
        format: uri
      templated:
        type: boolean
    x-go-type:
      import:
        package: "github.com/getlunaform/lunaform/models/hal"
      type: HalCurie
  server-error:
    type: object
    readOnly: true
    required:
      - status-code
      - status
      - message
    properties:
      status-code:
        type: integer
        format: int32
      status:
        type: string
      message:
        type: string
  resource-tf-state-backend:
    type: object
    properties:
      _links:
        $ref: "#/definitions/hal-rsc-links"
      name:
        type: string
      id:
        type: string
      configuration:
        type: object
