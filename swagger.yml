swagger: "2.0"
info:
  title: terraform-server
  description: |
   This is a RESTful server for managing Terraform plan and apply jobs and the auditing of actions to approve those apply jobs.
   The inspiration for this project is the AWS CloudFormation API's. The intention is to implement a locking mechanism
   not only for the terraform state, but for the plan and apply of terraform modules. Once a `module` plan starts, it
   is instantiated as a `stack` within the nomencalture of `terraform-server`.
  version: 0.0.1-alpha
  contact:
    email: drew.sonne@gmail.com
  license:
    name: Apache 2.0
    url: https://github.com/zeebox/terraform-server/blob/master/LICENSE
basePath: /api
schemes:
  - http
  - https
consumes:
- application/vnd.terraform.server.v1+json
produces:
- application/vnd.terraform.server.v1+json

x-tagGroups:
  - name: Resources
    tags:
      - resources

paths:
  /:
    get:
      tags:
        - resources
      description: List the root resource groups
      operationId: list-resource-groups
      responses:
        404:
          description: Not Found
        200:
          description: OK
          examples:
            application/vnd.terraform.server.v1+json:
              _links:
                $ref: "#/definitions/hal-rsc-links"
              _embedded:
                resources:
                  - name: tf
                    _links: {self: {href: "http://example.com/api/tf/"}}
                  - name: identity
                    _links: {self: {href: "http://example.com/api/identity"}}
                  - name: vcs
                    _links: {self: {href: "http://example.com/api/vcs"}}
          schema:
            $ref: "#/definitions/response-list-resources"
  /{group}:
    get:
      tags:
        - resources
      operationId: list-resources
      parameters:
        - in: path
          name: group
          type: string
          required: true
          description: Root level resources
          enum:
            - tf
            - identity
            - vcs
      responses:
        200:
          description: OK
          examples:
            application/vnd.terraform.server.v1+json:
              _embedded:
                resources:
                  - name: groups
                    _links: {self: {href: "http://example.com/api/identity/groups"}}
                  - name: providers
                    _links: {self: {href: "http://example.com/api/identity/providers"}}
                  - name: users
                    _links: {self: {href: "http://example.com/api/identity/users"}}
          schema:
            $ref: "#/definitions/response-list-resources"
definitions:
#  module:
#    type: string
#    description: The same definition as used within the [terraform ecosystem](<a href="https://www.terraform.io/docs/modules/index.html">https://www.terraform.io/docs/modules/index.html</a>).
#  stack:
#    type: string
#    description: A _stack_ is a _module_ bound to a specific set of parameters. Taking the analogy of classes and objects, if
#  identity_provider:
#    type: object
#    description: |
#      A source of users either locally managed, or through a federation.
#      Two types of Identity Providers (IdP) are offered. The first are locally managed IdP's which `terraform-server`
#      handles all management of. The second are read-only federated IdP's.
  response-list-resources:
    type: object
    required:
      - _links
      - _embedded
    description: List of resources
    properties:
      _links:
        $ref: "#/definitions/hal-rsc-links"
      _embedded:
        $ref: "#/definitions/resource-list"
  resource-list:
    type: object
    readOnly: true
    required:
      - resources
    properties:
      resources:
        type: array
        items:
          $ref: "#/definitions/resource"
  resource:
    type: object
    description: A resources
    required:
      - _links
      - name
    properties:
      _links:
        $ref: "#/definitions/hal-rsc-links"
      name:
        type: string
  hal-rsc-links:
    type: object
    readOnly: true
    description: Links to this resources and documentation for this resource
    properties:
      self:
        $ref: "#/definitions/hal-href"
      doc:
        $ref: "#/definitions/hal-href"
  hal-href:
    type: object
    readOnly: true
    properties:
      href:
        type: string
        format: uri
  principal:
    type: object