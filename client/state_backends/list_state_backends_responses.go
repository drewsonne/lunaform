// Code generated by go-swagger; DO NOT EDIT.

package state_backends

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/getlunaform/lunaform/models"
)

// ListStateBackendsReader is a Reader for the ListStateBackends structure.
type ListStateBackendsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListStateBackendsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewListStateBackendsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewListStateBackendsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewListStateBackendsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewListStateBackendsOK creates a ListStateBackendsOK with default headers values
func NewListStateBackendsOK() *ListStateBackendsOK {
	return &ListStateBackendsOK{}
}

/*ListStateBackendsOK handles this case with default header values.

OK
*/
type ListStateBackendsOK struct {
	Payload *models.ResponseListTfStateBackends
}

func (o *ListStateBackendsOK) Error() string {
	return fmt.Sprintf("[GET /tf/state-backends][%d] listStateBackendsOK  %+v", 200, o.Payload)
}

func (o *ListStateBackendsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseListTfStateBackends)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListStateBackendsNotFound creates a ListStateBackendsNotFound with default headers values
func NewListStateBackendsNotFound() *ListStateBackendsNotFound {
	return &ListStateBackendsNotFound{}
}

/*ListStateBackendsNotFound handles this case with default header values.

Not Found
*/
type ListStateBackendsNotFound struct {
}

func (o *ListStateBackendsNotFound) Error() string {
	return fmt.Sprintf("[GET /tf/state-backends][%d] listStateBackendsNotFound ", 404)
}

func (o *ListStateBackendsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListStateBackendsInternalServerError creates a ListStateBackendsInternalServerError with default headers values
func NewListStateBackendsInternalServerError() *ListStateBackendsInternalServerError {
	return &ListStateBackendsInternalServerError{}
}

/*ListStateBackendsInternalServerError handles this case with default header values.

Internal Server Error
*/
type ListStateBackendsInternalServerError struct {
	Payload *models.ServerError
}

func (o *ListStateBackendsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /tf/state-backends][%d] listStateBackendsInternalServerError  %+v", 500, o.Payload)
}

func (o *ListStateBackendsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
