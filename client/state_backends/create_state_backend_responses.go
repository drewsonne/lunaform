// Code generated by go-swagger; DO NOT EDIT.

package state_backends

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/getlunaform/lunaform/models"
)

// CreateStateBackendReader is a Reader for the CreateStateBackend structure.
type CreateStateBackendReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateStateBackendReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 201:
		result := NewCreateStateBackendCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewCreateStateBackendBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewCreateStateBackendCreated creates a CreateStateBackendCreated with default headers values
func NewCreateStateBackendCreated() *CreateStateBackendCreated {
	return &CreateStateBackendCreated{}
}

/*CreateStateBackendCreated handles this case with default header values.

OK
*/
type CreateStateBackendCreated struct {
	Payload *models.ResourceTfStateBackend
}

func (o *CreateStateBackendCreated) Error() string {
	return fmt.Sprintf("[POST /tf/state-backends][%d] createStateBackendCreated  %+v", 201, o.Payload)
}

func (o *CreateStateBackendCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResourceTfStateBackend)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateStateBackendBadRequest creates a CreateStateBackendBadRequest with default headers values
func NewCreateStateBackendBadRequest() *CreateStateBackendBadRequest {
	return &CreateStateBackendBadRequest{}
}

/*CreateStateBackendBadRequest handles this case with default header values.

Bad Request
*/
type CreateStateBackendBadRequest struct {
	Payload *models.ServerError
}

func (o *CreateStateBackendBadRequest) Error() string {
	return fmt.Sprintf("[POST /tf/state-backends][%d] createStateBackendBadRequest  %+v", 400, o.Payload)
}

func (o *CreateStateBackendBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
