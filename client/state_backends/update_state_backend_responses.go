// Code generated by go-swagger; DO NOT EDIT.

package state_backends

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/getlunaform/lunaform/models"
)

// UpdateStateBackendReader is a Reader for the UpdateStateBackend structure.
type UpdateStateBackendReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateStateBackendReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewUpdateStateBackendOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewUpdateStateBackendNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewUpdateStateBackendInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdateStateBackendOK creates a UpdateStateBackendOK with default headers values
func NewUpdateStateBackendOK() *UpdateStateBackendOK {
	return &UpdateStateBackendOK{}
}

/*UpdateStateBackendOK handles this case with default header values.

OK
*/
type UpdateStateBackendOK struct {
	Payload *models.ResourceTfStateBackend
}

func (o *UpdateStateBackendOK) Error() string {
	return fmt.Sprintf("[PUT /tf/state-backend/{id}][%d] updateStateBackendOK  %+v", 200, o.Payload)
}

func (o *UpdateStateBackendOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResourceTfStateBackend)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateStateBackendNotFound creates a UpdateStateBackendNotFound with default headers values
func NewUpdateStateBackendNotFound() *UpdateStateBackendNotFound {
	return &UpdateStateBackendNotFound{}
}

/*UpdateStateBackendNotFound handles this case with default header values.

Bad Request
*/
type UpdateStateBackendNotFound struct {
	Payload *models.ServerError
}

func (o *UpdateStateBackendNotFound) Error() string {
	return fmt.Sprintf("[PUT /tf/state-backend/{id}][%d] updateStateBackendNotFound  %+v", 404, o.Payload)
}

func (o *UpdateStateBackendNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateStateBackendInternalServerError creates a UpdateStateBackendInternalServerError with default headers values
func NewUpdateStateBackendInternalServerError() *UpdateStateBackendInternalServerError {
	return &UpdateStateBackendInternalServerError{}
}

/*UpdateStateBackendInternalServerError handles this case with default header values.

Internal Server Error
*/
type UpdateStateBackendInternalServerError struct {
	Payload *models.ServerError
}

func (o *UpdateStateBackendInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /tf/state-backend/{id}][%d] updateStateBackendInternalServerError  %+v", 500, o.Payload)
}

func (o *UpdateStateBackendInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
